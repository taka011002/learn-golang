// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: users.sql

package sqlc

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

const createUser = `-- name: CreateUser :one
INSERT INTO users (id, name, project_v2) VALUES ($1, $2, $3) RETURNING id, name, project_v2
`

type CreateUserParams struct {
	ID        pgtype.UUID
	Name      string
	ProjectV2 pgtype.Text
}

func (q *Queries) CreateUser(ctx context.Context, arg CreateUserParams) (User, error) {
	row := q.db.QueryRow(ctx, createUser, arg.ID, arg.Name, arg.ProjectV2)
	var i User
	err := row.Scan(&i.ID, &i.Name, &i.ProjectV2)
	return i, err
}

const getUser = `-- name: GetUser :one
SELECT id, name, project_v2 FROM users WHERE name = $1 LIMIT 1
`

func (q *Queries) GetUser(ctx context.Context, name string) (User, error) {
	row := q.db.QueryRow(ctx, getUser, name)
	var i User
	err := row.Scan(&i.ID, &i.Name, &i.ProjectV2)
	return i, err
}
